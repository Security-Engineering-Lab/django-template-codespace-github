#!/bin/bash

# Fixed Django deployment script for GitHub Codespace
echo "üöÄ Starting Django deployment from GitHub Codespace..."

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Azure CLI —á–µ—Ä–µ–∑ apt (–Ω–∞–¥—ñ–π–Ω–∏–π —Å–ø–æ—Å—ñ–±)
if ! command -v az &> /dev/null; then
    echo "üì¶ Installing Azure CLI via apt..."
    
    # –û–Ω–æ–≤–ª—é—î–º–æ —Å–∏—Å—Ç–µ–º—É
    sudo apt-get update -y
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg -y
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–ª—è –∫–ª—é—á—ñ–≤
    sudo mkdir -p /etc/apt/keyrings
    
    # –î–æ–¥–∞—î–º–æ Microsoft GPG –∫–ª—é—á
    curl -sLS https://packages.microsoft.com/keys/microsoft.asc | \
        gpg --dearmor | \
        sudo tee /etc/apt/keyrings/microsoft.gpg > /dev/null
    sudo chmod go+r /etc/apt/keyrings/microsoft.gpg
    
    # –î–æ–¥–∞—î–º–æ Azure CLI —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π
    AZ_REPO=$(lsb_release -cs)
    echo "deb [arch=`dpkg --print-architecture` signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \
        sudo tee /etc/apt/sources.list.d/azure-cli.list
    
    # –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–µ–∫—Å –ø–∞–∫–µ—Ç—ñ–≤ —ñ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Azure CLI
    sudo apt-get update -y
    sudo apt-get install azure-cli -y
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
    if command -v az &> /dev/null; then
        echo "‚úÖ Azure CLI installed successfully!"
    else
        echo "‚ùå Azure CLI installation failed. Trying alternative method..."
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ snap
        sudo snap install azure-cli --classic
    fi
else
    echo "‚úÖ Azure CLI already installed"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–µ—Ä—Å—ñ—é
az version --output table || echo "‚ö†Ô∏è Azure CLI installed but version check failed"

# –ó–º—ñ–Ω–Ω—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
RESOURCE_GROUP="rg-django-template"
LOCATION="East US"
APP_SERVICE_PLAN="asp-django-template"
WEB_APP_NAME="django-template-$(date +%s)"
SKU="F1"

echo ""
echo "üìã Configuration:"
echo "   Resource Group: $RESOURCE_GROUP"
echo "   Web App Name: $WEB_APP_NAME"
echo "   Location: $LOCATION"

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤ Azure
echo ""
echo "üîê Azure login..."
az account show &> /dev/null || {
    echo "Please login to Azure using device code:"
    az login --use-device-code
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—ó –ø—ñ–¥–ø–∏—Å–∫–∏
SUBSCRIPTION=$(az account show --query name -o tsv)
echo "üìä Using subscription: $SUBSCRIPTION"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤
echo ""
echo "üèóÔ∏è Creating Azure resources..."

# Resource Group
echo "   Creating resource group..."
az group create \
    --name $RESOURCE_GROUP \
    --location "$LOCATION" \
    --output table

# App Service Plan
echo "   Creating App Service Plan..."
az appservice plan create \
    --name $APP_SERVICE_PLAN \
    --resource-group $RESOURCE_GROUP \
    --sku $SKU \
    --is-linux \
    --output table

# Web App
echo "   Creating Web App..."
az webapp create \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP \
    --plan $APP_SERVICE_PLAN \
    --runtime "PYTHON|3.12" \
    --output table

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É
echo ""
echo "‚öôÔ∏è Configuring Web App..."
az webapp config appsettings set \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP \
    --settings \
        DJANGO_SETTINGS_MODULE="hello_world.settings" \
        DJANGO_DEBUG="False" \
        SCM_DO_BUILD_DURING_DEPLOYMENT="true" \
        WEBSITE_HTTPLOGGING_RETENTION_DAYS="7" \
    --output table

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–¥—É
echo ""
echo "üì¶ Preparing deployment package..."

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
echo "   Installing Python dependencies..."
pip install -r requirements.txt

# –ó–±—ñ—Ä —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
echo "   Collecting static files..."
python manage.py collectstatic --noinput

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è ZIP –∞—Ä—Ö—ñ–≤—É (–≤–∏–∫–ª—é—á–∞—î–º–æ –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω—ñ —Ñ–∞–π–ª–∏)
echo "   Creating deployment package..."
zip -r deployment.zip . \
    -x "*.git*" "*__pycache__*" "*.pyc" "venv/*" "env/*" \
       "*.md" ".devcontainer/*" "docs/*" "*.log" \
       "deployment.zip" "*deploy*.sh"

# –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è
echo ""
echo "üöÄ Deploying to Azure..."
az webapp deployment source config-zip \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP \
    --src deployment.zip

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è startup –∫–æ–º–∞–Ω–¥–∏
echo ""
echo "üîß Setting startup command..."
az webapp config set \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP \
    --startup-file "gunicorn --bind=0.0.0.0 --timeout 600 hello_world.wsgi"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
echo ""
echo "üîÑ Restarting application..."
az webapp restart \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP

# Health check –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—é –ª–æ–≥—ñ–∫–æ—é
echo ""
echo "üè• Health check..."
APP_URL="https://$WEB_APP_NAME.azurewebsites.net"

echo "   Waiting for application to start..."
sleep 120

echo "   Testing connection..."
SUCCESS=false
for i in {1..5}; do
    echo "   Attempt $i/5..."
    
    HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $APP_URL --connect-timeout 30 || echo "000")
    
    if [ "$HTTP_STATUS" -eq 200 ]; then
        echo "‚úÖ Deployment successful!"
        echo "üåê Your Django app: $APP_URL"
        echo "üìä Resource Group: $RESOURCE_GROUP"
        echo "üè∑Ô∏è App Name: $WEB_APP_NAME"
        SUCCESS=true
        break
    else
        echo "‚ö†Ô∏è HTTP Status: $HTTP_STATUS"
        if [ $i -lt 5 ]; then
            echo "   Waiting 30 seconds before retry..."
            sleep 30
        fi
    fi
done

if [ "$SUCCESS" = false ]; then
    echo ""
    echo "‚ùå Health check failed after 5 attempts"
    echo "üîç Checking application logs..."
    az webapp log tail --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP --timeout 30 || echo "Could not retrieve logs"
    echo ""
    echo "üí° Troubleshooting tips:"
    echo "   1. Check logs: az webapp log tail --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP"
    echo "   2. Check configuration: az webapp config show --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP"
    echo "   3. Try restarting: az webapp restart --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP"
fi

# –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏
echo ""
echo "üìù Useful commands:"
echo "   View logs: az webapp log tail --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP"
echo "   Restart: az webapp restart --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP"
echo "   SSH: az webapp ssh --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP"
echo "   Delete: az group delete --name $RESOURCE_GROUP --yes --no-wait"

# –û—á–∏—â–µ–Ω–Ω—è
rm -f deployment.zip

echo ""
echo "üéâ Deployment script completed!"
echo "üåê App URL: $APP_URL"
