#!/bin/bash

echo "üöÄ Django deployment with automatic Azure CLI installation..."

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Azure CLI
install_azure_cli() {
    echo "üì¶ Installing Azure CLI..."
    
    # –û–Ω–æ–≤–ª—é—î–º–æ —Å–∏—Å—Ç–µ–º—É
    sudo apt-get update -q
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    sudo apt-get install -y ca-certificates curl apt-transport-https lsb-release gnupg
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–ª—è –∫–ª—é—á—ñ–≤
    sudo mkdir -p /etc/apt/keyrings
    
    # –î–æ–¥–∞—î–º–æ Microsoft GPG –∫–ª—é—á
    curl -sLS https://packages.microsoft.com/keys/microsoft.asc | \
        gpg --dearmor | \
        sudo tee /etc/apt/keyrings/microsoft.gpg > /dev/null
    sudo chmod go+r /etc/apt/keyrings/microsoft.gpg
    
    # –î–æ–¥–∞—î–º–æ Azure CLI —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π
    AZ_REPO=$(lsb_release -cs)
    echo "deb [arch=`dpkg --print-architecture` signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \
        sudo tee /etc/apt/sources.list.d/azure-cli.list
    
    # –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–µ–∫—Å –ø–∞–∫–µ—Ç—ñ–≤ —ñ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Azure CLI
    sudo apt-get update -q
    sudo apt-get install -y azure-cli
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
    if command -v az &> /dev/null; then
        echo "‚úÖ Azure CLI installed successfully!"
        az --version
    else
        echo "‚ùå Azure CLI installation failed!"
        exit 1
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å Azure CLI
if ! command -v az &> /dev/null; then
    echo "Azure CLI not found. Installing..."
    install_azure_cli
else
    echo "‚úÖ Azure CLI already installed"
    az --version
fi

# –ó–º—ñ–Ω–Ω—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
RESOURCE_GROUP="rg-django-template"
LOCATION="East US"
APP_SERVICE_PLAN="asp-django-template"
WEB_APP_NAME="django-template-$(date +%s)"
SKU="B1"  # Basic tier

echo ""
echo "üìã Configuration:"
echo "   Resource Group: $RESOURCE_GROUP"
echo "   Web App Name: $WEB_APP_NAME"
echo "   Location: $LOCATION"
echo "   SKU: $SKU (Basic tier - ~$13/month)"
echo ""

read -p "Continue with deployment? (y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Deployment cancelled"
    exit 1
fi

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤ Azure
echo "üîê Azure login..."
if ! az account show &> /dev/null; then
    echo "Please login to Azure using device code:"
    az login --use-device-code
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—ó –ø—ñ–¥–ø–∏—Å–∫–∏
SUBSCRIPTION=$(az account show --query name -o tsv)
echo "üìä Using subscription: $SUBSCRIPTION"

# –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π resource group —è–∫—â–æ —ñ—Å–Ω—É—î
echo "üßπ Cleaning up previous resources..."
az group delete --name $RESOURCE_GROUP --yes --no-wait 2>/dev/null || echo "No previous resource group found"

# –ß–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
echo "‚è≥ Waiting for cleanup to complete..."
sleep 30

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤
echo "üèóÔ∏è Creating Azure resources..."

# Resource Group
echo "   Creating resource group..."
az group create \
    --name $RESOURCE_GROUP \
    --location "$LOCATION" \
    --output table

# App Service Plan –∑ Basic tier
echo "   Creating App Service Plan (Basic tier)..."
az appservice plan create \
    --name $APP_SERVICE_PLAN \
    --resource-group $RESOURCE_GROUP \
    --sku $SKU \
    --is-linux \
    --output table

# Web App
echo "   Creating Web App..."
az webapp create \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP \
    --plan $APP_SERVICE_PLAN \
    --runtime "PYTHON|3.12" \
    --output table

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É
echo "‚öôÔ∏è Configuring Web App..."
az webapp config appsettings set \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP \
    --settings \
        DJANGO_SETTINGS_MODULE="hello_world.settings" \
        DJANGO_DEBUG="False" \
        SCM_DO_BUILD_DURING_DEPLOYMENT="true" \
        WEBSITE_HTTPLOGGING_RETENTION_DAYS="7" \
    --output table

# –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–¥—É
echo "üì¶ Preparing deployment package..."
python manage.py collectstatic --noinput

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è ZIP –∞—Ä—Ö—ñ–≤—É
echo "   Creating ZIP package..."
zip -r deployment.zip . \
    -x "*.git*" "*__pycache__*" "*.pyc" "venv/*" "env/*" \
       "*.md" ".devcontainer/*" "docs/*" "*.log" \
       "deployment.zip" "*deploy*.sh"

# –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è
echo "üöÄ Deploying to Azure..."
az webapp deploy \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP \
    --src-path deployment.zip \
    --type zip

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è startup –∫–æ–º–∞–Ω–¥–∏
echo "üîß Setting startup command..."
az webapp config set \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP \
    --startup-file "gunicorn --bind=0.0.0.0 --timeout 600 hello_world.wsgi"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
echo "üîÑ Restarting application..."
az webapp restart \
    --name $WEB_APP_NAME \
    --resource-group $RESOURCE_GROUP

# Health check
echo "üè• Health check..."
APP_URL="https://$WEB_APP_NAME.azurewebsites.net"

echo "   Waiting for application to start..."
sleep 120

SUCCESS=false
for i in {1..5}; do
    echo "   Attempt $i/5..."
    HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $APP_URL --connect-timeout 30 || echo "000")
    
    if [ "$HTTP_STATUS" -eq 200 ]; then
        echo "‚úÖ Deployment successful!"
        echo "üåê Your Django app: $APP_URL"
        echo "üí∞ Monthly cost: ~$13 (Basic tier)"
        echo "üè∑Ô∏è App Name: $WEB_APP_NAME"
        echo "üìä Resource Group: $RESOURCE_GROUP"
        SUCCESS=true
        break
    else
        echo "‚ö†Ô∏è HTTP Status: $HTTP_STATUS"
        if [ $i -lt 5 ]; then
            echo "   Waiting 30 seconds..."
            sleep 30
        fi
    fi
done

if [ "$SUCCESS" = false ]; then
    echo "‚ùå Health check failed. Checking logs..."
    az webapp log tail --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP --timeout 30 || echo "Could not retrieve logs"
fi

# –ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏
echo ""
echo "üìù Useful commands:"
echo "   View logs: az webapp log tail --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP"
echo "   Stop app: az webapp stop --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP"
echo "   Delete all: az group delete --name $RESOURCE_GROUP --yes --no-wait"

# –û—á–∏—â–µ–Ω–Ω—è
rm -f deployment.zip

echo ""
echo "üéâ Deployment completed!"
echo "üåê Access your app: $APP_URL"
