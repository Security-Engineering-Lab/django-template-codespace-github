#!/bin/bash

echo "üöÄ Deploying to Azure Container Instances (Student Subscription)..."

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Azure CLI —á–µ—Ä–µ–∑ apt (–Ω–∞–¥—ñ–π–Ω–∏–π —Å–ø–æ—Å—ñ–±)
if ! command -v az &> /dev/null; then
    echo "üì¶ Installing Azure CLI via apt..."
    
    # –û–Ω–æ–≤–ª—é—î–º–æ —Å–∏—Å—Ç–µ–º—É
    sudo apt-get update -y
    
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
    sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg -y
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–ª—è –∫–ª—é—á—ñ–≤
    sudo mkdir -p /etc/apt/keyrings
    
    # –î–æ–¥–∞—î–º–æ Microsoft GPG –∫–ª—é—á
    curl -sLS https://packages.microsoft.com/keys/microsoft.asc | \
        gpg --dearmor | \
        sudo tee /etc/apt/keyrings/microsoft.gpg > /dev/null
    sudo chmod go+r /etc/apt/keyrings/microsoft.gpg
    
    # –î–æ–¥–∞—î–º–æ Azure CLI —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π
    AZ_REPO=$(lsb_release -cs)
    echo "deb [arch=`dpkg --print-architecture` signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \
        sudo tee /etc/apt/sources.list.d/azure-cli.list
    
    # –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–µ–∫—Å –ø–∞–∫–µ—Ç—ñ–≤ —ñ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Azure CLI
    sudo apt-get update -y
    sudo apt-get install azure-cli -y
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
    if command -v az &> /dev/null; then
        echo "‚úÖ Azure CLI installed successfully!"
    else
        echo "‚ùå Azure CLI installation failed. Trying alternative method..."
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ snap
        sudo snap install azure-cli --classic
    fi
else
    echo "‚úÖ Azure CLI already installed"
fi

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–µ—Ä—Å—ñ—é
az version --output table || echo "‚ö†Ô∏è Azure CLI installed but version check failed"






RESOURCE_GROUP="rg-django-student"
CONTAINER_NAME="django-student-$(date +%s)"
LOCATION="Central US"  # –°–ø—Ä–æ–±—É—î–º–æ —ñ–Ω—à–∏–π —Ä–µ–≥—ñ–æ–Ω

echo "üìã Configuration:"
echo "   Resource Group: $RESOURCE_GROUP"
echo "   Container Name: $CONTAINER_NAME"
echo "   Location: $LOCATION"
echo "   Subscription: Student"

# –ü–µ—Ä–µ–∫–ª—é—á–∞—î–º–æ—Å—è –Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç—Å—å–∫—É –ø—ñ–¥–ø–∏—Å–∫—É
echo "üîÑ Switching to student subscription..."
az account set --subscription "Azure –¥–ª—è —É—á–∞—â–∏—Ö—Å—è"

# –†–µ—î—Å—Ç—Ä—É—î–º–æ providers
echo "üìù Registering providers..."
az provider register --namespace Microsoft.ContainerInstance
az provider register --namespace Microsoft.Web

# –ß–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
echo "‚è≥ Waiting for provider registration..."
while [[ $(az provider show --namespace Microsoft.ContainerInstance --query registrationState -o tsv) != "Registered" ]]; do
    echo "   Still registering..."
    sleep 10
done
echo "‚úÖ Providers registered!"

# –°—Ç–≤–æ—Ä—é—î–º–æ resource group
echo "üèóÔ∏è Creating resource group..."
az group create --name $RESOURCE_GROUP --location "$LOCATION"

# –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑ Microsoft –∑—Ä–∞–∑–∫–æ–º
echo "üöÄ Creating container with Microsoft sample..."
az container create \
    --resource-group $RESOURCE_GROUP \
    --name $CONTAINER_NAME \
    --image "mcr.microsoft.com/azuredocs/aci-helloworld:latest" \
    --cpu 1 \
    --memory 1 \
    --ip-address public \
    --ports 80 \
    --location "$LOCATION"

# –û—Ç—Ä–∏–º—É—î–º–æ IP
echo "üìç Getting container IP..."
sleep 30
CONTAINER_IP=$(az container show \
    --resource-group $RESOURCE_GROUP \
    --name $CONTAINER_NAME \
    --query ipAddress.ip \
    --output tsv)

if [ ! -z "$CONTAINER_IP" ] && [ "$CONTAINER_IP" != "null" ]; then
    echo "‚úÖ Container deployed successfully!"
    echo "üåê Your app: http://$CONTAINER_IP"
    echo "üí∞ Cost: ~$3-5/month"
    echo "üìä Resource Group: $RESOURCE_GROUP"
    echo "üè∑Ô∏è Container Name: $CONTAINER_NAME"
    
    # –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    echo "üîç Testing connection..."
    HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "http://$CONTAINER_IP" --connect-timeout 10 || echo "000")
    if [ "$HTTP_STATUS" -eq 200 ]; then
        echo "‚úÖ Connection test passed!"
    else
        echo "‚ö†Ô∏è Connection test failed: HTTP $HTTP_STATUS"
    fi
else
    echo "‚ùå Failed to get container IP"
    echo "üîç Checking container logs..."
    az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME
fi

echo ""
echo "üìù Useful commands:"
echo "   View logs: az container logs --resource-group $RESOURCE_GROUP --name $CONTAINER_NAME"
echo "   Delete all: az group delete --name $RESOURCE_GROUP --yes --no-wait"
